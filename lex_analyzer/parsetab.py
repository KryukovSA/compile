
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ASSIGN BEGIN COLON COMMA CONST DO ELSE END END_DOT EXPONENT ID IF LETTER LPAREN MUL NOT NUMBER OPERATOR PROGRAM RPAREN SEMICOLON STRING THEN TYPE UNDERSCORE VAR WHILEprogram : program_heading SEMICOLON program_blockprogram_heading : PROGRAM identifier\n                       | PROGRAM identifier LPAREN program_parameter_list RPARENprogram_parameter_list : identifier_listidentifier_list : identifier\n                       | identifier_list COMMA identifieridentifier : ID\n                  | UNDERSCORE\n                  | identifier STRING\n                  | identifier NUMBER\n                  | NUMBER program_block : blockblock : declarative_part statement_partdeclarative_part : declaration_group\n                        | declarative_part declaration_groupdeclaration_group : constant_definition_group\n                         | type_definition_group\n                         | variable_declaration_groupconstant_definition_group : CONST constant_definition SEMICOLON\n                                 | constant_definition_group constant_definition SEMICOLONconstant_definition : ID OPERATOR constantconstant : number\n                | sign number\n                | sign real_numbersign : ADD\n            | MULnumber : decimal_integer\n              | sign decimal_integerdecimal_integer : digit_sequencedigit_sequence : NUMBER\n                      | digit_sequence NUMBERreal_number : digit_sequence ADD fractional_part\n                   | digit_sequence exponent scale_factor\n                   | digit_sequence ADD fractional_part exponent scale_factorfractional_part : digit_sequencescale_factor : sign digit_sequenceexponent : EXPONENTvariable_declaration_group : VAR variable_declaration SEMICOLON\n                                  | variable_declaration_group variable_declaration SEMICOLONvariable_declaration : identifier_list COLON type_denotertype_denoter : type_identifiertype_identifier : IDtype_definition_group : TYPE type_definition SEMICOLON\n                             | type_definition_group type_definition SEMICOLONtype_definition : ID ASSIGN type_denoterstatement_part : compound_statementcompound_statement : BEGIN statement_sequence END_DOT\n    | BEGIN statement_sequence END SEMICOLONstatement_sequence : statement\n                          | statement_sequence SEMICOLON statementstatement : simple_statement\n                 | structured_statement\n                 simple_statement : empty_statement\n                        | assignment_statement\n                        | procedure_statementstructured_statement : compound_statement\n                             | conditional_statement\n                             | repetitive_statementempty_statement : SEMICOLONassignment_statement : assignment_statement_lhs ASSIGN expressionassignment_statement_lhs : variable_accessfile_variable : variable_accessvariable_access : entire_variable\n                       | component_variableentire_variable : variable_identifiervariable_identifier : IDcomponent_variable : field_designatorfield_designator : field_designator_identifierfield_designator_identifier : IDexpression : shift_expression\n                  | shift_expression relational_operator shift_expressionrelational_operator : OPERATORshift_expression : simple_expressionsimple_expression : term\n                          | term ADD term\n                          | term MUL termterm : factor\n            | factor multiplying_operator factorfactor : sign unsigned_constant\n            | number\n              | variable_access\n              | LPAREN expression RPAREN\n              | NOT factormultiplying_operator : MULunsigned_constant : number\n                         | real_number\n                         | constant_identifierconstant_identifier : IDconditional_statement : if_statementif_statement : IF boolean_expression THEN statement else_partboolean_expression : expressionelse_part : ELSE statement\n                 | empty_statementrepetitive_statement : while_statementwhile_statement : WHILE boolean_expression DO statementwrite_parameter : expression\n                       | expression COLON expression\n                       | expression COLON expression COLON expressionwrite_parameter_list : LPAREN write_parameter RPAREN\n                            | LPAREN STRING COMMA write_parameter RPAREN\n                            | LPAREN file_variable COMMA write_parameter RPAREN\n                            | LPAREN file_variable COMMA write_parameter COMMA write_parameter RPARENread_parameter_list : LPAREN variable_access RPAREN\n                           | LPAREN file_variable COMMA variable_access RPAREN\n                           | LPAREN file_variable COMMA variable_access COMMA variable_access RPARENprocedure_statement : procedure_identifier read_parameter_list\n                            | procedure_identifier write_parameter_listprocedure_identifier : ID'
    
_lr_action_items = {'PROGRAM':([0,],[3,]),'$end':([1,9,10,22,24,73,106,],[0,-1,-12,-13,-46,-47,-48,]),'SEMICOLON':([2,5,6,7,8,20,21,25,26,28,30,33,34,35,38,39,40,41,42,43,44,45,46,47,48,51,52,57,58,59,60,61,72,73,74,75,77,78,82,83,84,87,89,90,93,94,95,96,98,99,101,102,103,104,106,107,108,114,122,123,124,125,126,127,128,130,131,132,133,134,135,136,138,141,142,143,144,145,146,150,151,156,157,158,159,160,161,164,166,167,169,171,175,176,177,],[4,-2,-7,-8,-11,-9,-10,39,62,64,66,69,70,71,75,-59,-49,-51,-52,-53,-54,-55,-56,-57,-58,-89,-94,-63,-64,-65,-67,-68,-3,-47,106,39,-106,-107,-70,-73,-74,-77,-80,-81,-27,-29,-30,-66,-21,-22,-42,-45,-41,-40,-48,-50,-60,39,-79,-27,-85,-86,-87,-29,-88,-83,-31,39,-23,-24,-29,-103,-99,39,-71,-75,-76,-78,-28,-82,-95,-90,39,-93,-35,-32,-33,-104,-101,-100,-92,-36,-34,-105,-102,]),'ID':([3,13,14,15,16,17,18,19,25,55,56,62,64,65,66,67,68,69,70,71,75,76,79,85,86,88,91,92,114,115,116,117,118,119,120,132,137,139,140,157,163,165,168,],[6,27,29,6,27,29,6,6,54,96,96,-20,-44,101,-39,101,6,-19,-43,-38,54,96,96,-25,-26,128,96,96,54,96,-72,96,96,96,-84,54,96,96,96,54,96,96,96,]),'UNDERSCORE':([3,15,18,19,66,68,71,],[7,7,7,7,-39,7,-38,]),'NUMBER':([3,5,6,7,8,15,18,19,20,21,32,55,56,63,66,68,71,76,79,85,86,88,91,92,94,95,100,105,115,116,117,118,119,120,121,127,131,135,137,139,140,147,159,162,165,168,171,],[8,21,-7,-8,-11,8,8,8,-9,-10,21,95,95,95,-39,8,-38,95,95,-25,-26,95,95,95,131,-30,95,21,95,-72,95,95,95,-84,95,131,-31,131,95,95,95,95,131,95,95,95,131,]),'CONST':([4,11,12,13,14,15,23,62,64,66,69,70,71,],[16,16,-14,-16,-17,-18,-15,-20,-44,-39,-19,-43,-38,]),'TYPE':([4,11,12,13,14,15,23,62,64,66,69,70,71,],[17,17,-14,-16,-17,-18,-15,-20,-44,-39,-19,-43,-38,]),'VAR':([4,11,12,13,14,15,23,62,64,66,69,70,71,],[18,18,-14,-16,-17,-18,-15,-20,-44,-39,-19,-43,-38,]),'LPAREN':([5,6,7,8,20,21,50,54,55,56,76,79,91,92,115,116,117,118,119,120,137,139,140,165,168,],[19,-7,-8,-11,-9,-10,79,-108,91,91,91,91,91,91,91,-72,91,91,91,-84,91,91,91,91,91,]),'STRING':([5,6,7,8,20,21,32,79,105,],[20,-7,-8,-11,-9,-10,20,112,20,]),'COLON':([6,7,8,20,21,31,32,57,58,59,60,61,82,83,84,87,89,90,93,94,95,96,105,109,113,122,123,124,125,126,127,128,130,131,142,143,144,145,146,150,152,155,159,160,161,171,175,],[-7,-8,-11,-9,-10,67,-5,-63,-64,-65,-67,-68,-70,-73,-74,-77,-80,-81,-27,-29,-30,-66,-6,-81,140,-79,-27,-85,-86,-87,-29,-88,-83,-31,-71,-75,-76,-78,-28,-82,-81,168,-35,-32,-33,-36,-34,]),'COMMA':([6,7,8,20,21,31,32,37,57,58,59,60,61,82,83,84,87,89,90,93,94,95,96,105,109,110,112,113,122,123,124,125,126,127,128,130,131,142,143,144,145,146,150,152,153,155,159,160,161,171,174,175,],[-7,-8,-11,-9,-10,68,-5,68,-63,-64,-65,-67,-68,-70,-73,-74,-77,-80,-81,-27,-29,-30,-66,-6,-62,137,139,-96,-79,-27,-85,-86,-87,-29,-88,-83,-31,-71,-75,-76,-78,-28,-82,163,165,-97,-35,-32,-33,-36,-98,-34,]),'RPAREN':([6,7,8,20,21,32,36,37,57,58,59,60,61,82,83,84,87,89,90,93,94,95,96,105,109,111,113,122,123,124,125,126,127,128,129,130,131,142,143,144,145,146,150,152,153,154,155,159,160,161,171,172,173,174,175,],[-7,-8,-11,-9,-10,-5,72,-4,-63,-64,-65,-67,-68,-70,-73,-74,-77,-80,-81,-27,-29,-30,-66,-6,136,138,-96,-79,-27,-85,-86,-87,-29,-88,150,-83,-31,-71,-75,-76,-78,-28,-82,164,166,167,-97,-35,-32,-33,-36,176,177,-98,-34,]),'BEGIN':([11,12,13,14,15,23,25,62,64,66,69,70,71,75,114,132,157,],[25,-14,-16,-17,-18,-15,25,-20,-44,-39,-19,-43,-38,25,25,25,25,]),'IF':([25,75,114,132,157,],[55,55,55,55,55,]),'WHILE':([25,75,114,132,157,],[56,56,56,56,56,]),'OPERATOR':([27,57,58,59,60,61,82,83,84,87,89,90,93,94,95,96,109,122,123,124,125,126,127,128,130,131,143,144,145,146,150,152,159,160,161,171,175,],[63,-63,-64,-65,-67,-68,116,-73,-74,-77,-80,-81,-27,-29,-30,-66,-81,-79,-27,-85,-86,-87,-29,-88,-83,-31,-75,-76,-78,-28,-82,-81,-35,-32,-33,-36,-34,]),'ASSIGN':([29,49,53,54,57,58,59,60,61,],[65,76,-61,-66,-63,-64,-65,-67,-68,]),'END_DOT':([38,39,40,41,42,43,44,45,46,47,48,51,52,57,58,59,60,61,73,77,78,82,83,84,87,89,90,93,94,95,96,106,107,108,122,123,124,125,126,127,128,130,131,136,138,142,143,144,145,146,150,151,156,158,159,160,161,164,166,167,169,171,175,176,177,],[73,-59,-49,-51,-52,-53,-54,-55,-56,-57,-58,-89,-94,-63,-64,-65,-67,-68,-47,-106,-107,-70,-73,-74,-77,-80,-81,-27,-29,-30,-66,-48,-50,-60,-79,-27,-85,-86,-87,-29,-88,-83,-31,-103,-99,-71,-75,-76,-78,-28,-82,-95,-90,-93,-35,-32,-33,-104,-101,-100,-92,-36,-34,-105,-102,]),'END':([38,39,40,41,42,43,44,45,46,47,48,51,52,57,58,59,60,61,73,77,78,82,83,84,87,89,90,93,94,95,96,106,107,108,122,123,124,125,126,127,128,130,131,136,138,142,143,144,145,146,150,151,156,158,159,160,161,164,166,167,169,171,175,176,177,],[74,-59,-49,-51,-52,-53,-54,-55,-56,-57,-58,-89,-94,-63,-64,-65,-67,-68,-47,-106,-107,-70,-73,-74,-77,-80,-81,-27,-29,-30,-66,-48,-50,-60,-79,-27,-85,-86,-87,-29,-88,-83,-31,-103,-99,-71,-75,-76,-78,-28,-82,-95,-90,-93,-35,-32,-33,-104,-101,-100,-92,-36,-34,-105,-102,]),'ELSE':([39,41,42,43,44,45,46,47,48,51,52,57,58,59,60,61,73,77,78,82,83,84,87,89,90,93,94,95,96,106,108,122,123,124,125,126,127,128,130,131,136,138,141,142,143,144,145,146,150,151,156,158,159,160,161,164,166,167,169,171,175,176,177,],[-59,-51,-52,-53,-54,-55,-56,-57,-58,-89,-94,-63,-64,-65,-67,-68,-47,-106,-107,-70,-73,-74,-77,-80,-81,-27,-29,-30,-66,-48,-60,-79,-27,-85,-86,-87,-29,-88,-83,-31,-103,-99,157,-71,-75,-76,-78,-28,-82,-95,-90,-93,-35,-32,-33,-104,-101,-100,-92,-36,-34,-105,-102,]),'NOT':([55,56,76,79,91,92,115,116,117,118,119,120,137,139,140,165,168,],[92,92,92,92,92,92,92,-72,92,92,92,-84,92,92,92,92,92,]),'ADD':([55,56,57,58,59,60,61,63,76,79,84,85,86,87,88,89,90,91,92,93,94,95,96,100,109,115,116,117,118,119,120,122,123,124,125,126,127,128,130,131,135,137,139,140,145,146,148,149,150,152,159,160,161,165,168,170,171,175,],[85,85,-63,-64,-65,-67,-68,85,85,85,117,-25,-26,-77,85,-80,-81,85,85,-27,-29,-30,-66,85,-81,85,-72,85,85,85,-84,-79,-27,-85,-86,-87,147,-88,-83,-31,147,85,85,85,-78,-28,85,-37,-82,-81,-35,-32,-33,85,85,85,-36,-34,]),'MUL':([55,56,57,58,59,60,61,63,76,79,84,85,86,87,88,89,90,91,92,93,94,95,96,100,109,115,116,117,118,119,120,122,123,124,125,126,127,128,130,131,137,139,140,145,146,148,149,150,152,159,160,161,165,168,170,171,175,],[86,86,-63,-64,-65,-67,-68,86,86,86,118,-25,-26,120,86,-80,-81,86,86,-27,-29,-30,-66,86,-81,86,-72,86,86,86,-84,-79,-27,-85,-86,-87,-29,-88,-83,-31,86,86,86,-78,-28,86,-37,-82,-81,-35,-32,-33,86,86,86,-36,-34,]),'THEN':([57,58,59,60,61,80,81,82,83,84,87,89,90,93,94,95,96,122,123,124,125,126,127,128,130,131,142,143,144,145,146,150,159,160,161,171,175,],[-63,-64,-65,-67,-68,114,-91,-70,-73,-74,-77,-80,-81,-27,-29,-30,-66,-79,-27,-85,-86,-87,-29,-88,-83,-31,-71,-75,-76,-78,-28,-82,-35,-32,-33,-36,-34,]),'DO':([57,58,59,60,61,81,82,83,84,87,89,90,93,94,95,96,97,122,123,124,125,126,127,128,130,131,142,143,144,145,146,150,159,160,161,171,175,],[-63,-64,-65,-67,-68,-91,-70,-73,-74,-77,-80,-81,-27,-29,-30,-66,132,-79,-27,-85,-86,-87,-29,-88,-83,-31,-71,-75,-76,-78,-28,-82,-35,-32,-33,-36,-34,]),'EXPONENT':([95,127,131,135,159,160,],[-30,149,-31,149,-35,149,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_heading':([0,],[2,]),'identifier':([3,15,18,19,68,],[5,32,32,32,105,]),'program_block':([4,],[9,]),'block':([4,],[10,]),'declarative_part':([4,],[11,]),'declaration_group':([4,11,],[12,23,]),'constant_definition_group':([4,11,],[13,13,]),'type_definition_group':([4,11,],[14,14,]),'variable_declaration_group':([4,11,],[15,15,]),'statement_part':([11,],[22,]),'compound_statement':([11,25,75,114,132,157,],[24,46,46,46,46,46,]),'constant_definition':([13,16,],[26,33,]),'type_definition':([14,17,],[28,34,]),'variable_declaration':([15,18,],[30,35,]),'identifier_list':([15,18,19,],[31,31,37,]),'program_parameter_list':([19,],[36,]),'statement_sequence':([25,],[38,]),'statement':([25,75,114,132,157,],[40,107,141,151,169,]),'simple_statement':([25,75,114,132,157,],[41,41,41,41,41,]),'structured_statement':([25,75,114,132,157,],[42,42,42,42,42,]),'empty_statement':([25,75,114,132,141,157,],[43,43,43,43,158,43,]),'assignment_statement':([25,75,114,132,157,],[44,44,44,44,44,]),'procedure_statement':([25,75,114,132,157,],[45,45,45,45,45,]),'conditional_statement':([25,75,114,132,157,],[47,47,47,47,47,]),'repetitive_statement':([25,75,114,132,157,],[48,48,48,48,48,]),'assignment_statement_lhs':([25,75,114,132,157,],[49,49,49,49,49,]),'procedure_identifier':([25,75,114,132,157,],[50,50,50,50,50,]),'if_statement':([25,75,114,132,157,],[51,51,51,51,51,]),'while_statement':([25,75,114,132,157,],[52,52,52,52,52,]),'variable_access':([25,55,56,75,76,79,91,92,114,115,117,118,119,132,137,139,140,157,163,165,168,],[53,90,90,53,90,109,90,90,53,90,90,90,90,53,152,90,90,53,172,90,90,]),'entire_variable':([25,55,56,75,76,79,91,92,114,115,117,118,119,132,137,139,140,157,163,165,168,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'component_variable':([25,55,56,75,76,79,91,92,114,115,117,118,119,132,137,139,140,157,163,165,168,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'variable_identifier':([25,55,56,75,76,79,91,92,114,115,117,118,119,132,137,139,140,157,163,165,168,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'field_designator':([25,55,56,75,76,79,91,92,114,115,117,118,119,132,137,139,140,157,163,165,168,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'field_designator_identifier':([25,55,56,75,76,79,91,92,114,115,117,118,119,132,137,139,140,157,163,165,168,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'read_parameter_list':([50,],[77,]),'write_parameter_list':([50,],[78,]),'boolean_expression':([55,56,],[80,97,]),'expression':([55,56,76,79,91,137,139,140,165,168,],[81,81,108,113,129,113,113,155,113,174,]),'shift_expression':([55,56,76,79,91,115,137,139,140,165,168,],[82,82,82,82,82,142,82,82,82,82,82,]),'simple_expression':([55,56,76,79,91,115,137,139,140,165,168,],[83,83,83,83,83,83,83,83,83,83,83,]),'term':([55,56,76,79,91,115,117,118,137,139,140,165,168,],[84,84,84,84,84,84,143,144,84,84,84,84,84,]),'factor':([55,56,76,79,91,92,115,117,118,119,137,139,140,165,168,],[87,87,87,87,87,130,87,87,87,145,87,87,87,87,87,]),'sign':([55,56,63,76,79,88,91,92,100,115,117,118,119,137,139,140,148,165,168,170,],[88,88,100,88,88,121,88,88,121,88,88,88,88,88,88,88,162,88,88,162,]),'number':([55,56,63,76,79,88,91,92,100,115,117,118,119,137,139,140,165,168,],[89,89,99,89,89,124,89,89,133,89,89,89,89,89,89,89,89,89,]),'decimal_integer':([55,56,63,76,79,88,91,92,100,115,117,118,119,121,137,139,140,165,168,],[93,93,93,93,93,123,93,93,123,93,93,93,93,146,93,93,93,93,93,]),'digit_sequence':([55,56,63,76,79,88,91,92,100,115,117,118,119,121,137,139,140,147,162,165,168,],[94,94,94,94,94,127,94,94,135,94,94,94,94,94,94,94,94,159,171,94,94,]),'constant':([63,],[98,]),'type_denoter':([65,67,],[102,104,]),'type_identifier':([65,67,],[103,103,]),'file_variable':([79,],[110,]),'write_parameter':([79,137,139,165,],[111,153,154,173,]),'relational_operator':([82,],[115,]),'multiplying_operator':([87,],[119,]),'unsigned_constant':([88,],[122,]),'real_number':([88,100,],[125,134,]),'constant_identifier':([88,],[126,]),'exponent':([127,135,160,],[148,148,170,]),'else_part':([141,],[156,]),'fractional_part':([147,],[160,]),'scale_factor':([148,170,],[161,175,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_heading SEMICOLON program_block','program',3,'p_program','main.py',120),
  ('program_heading -> PROGRAM identifier','program_heading',2,'p_program_heading','main.py',125),
  ('program_heading -> PROGRAM identifier LPAREN program_parameter_list RPAREN','program_heading',5,'p_program_heading','main.py',126),
  ('program_parameter_list -> identifier_list','program_parameter_list',1,'p_program_parameter_list','main.py',134),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','main.py',139),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','main.py',140),
  ('identifier -> ID','identifier',1,'p_identifier','main.py',149),
  ('identifier -> UNDERSCORE','identifier',1,'p_identifier','main.py',150),
  ('identifier -> identifier STRING','identifier',2,'p_identifier','main.py',151),
  ('identifier -> identifier NUMBER','identifier',2,'p_identifier','main.py',152),
  ('identifier -> NUMBER','identifier',1,'p_identifier','main.py',153),
  ('program_block -> block','program_block',1,'p_program_block','main.py',168),
  ('block -> declarative_part statement_part','block',2,'p_block','main.py',174),
  ('declarative_part -> declaration_group','declarative_part',1,'p_declarative_part','main.py',182),
  ('declarative_part -> declarative_part declaration_group','declarative_part',2,'p_declarative_part','main.py',183),
  ('declaration_group -> constant_definition_group','declaration_group',1,'p_declaration_group','main.py',192),
  ('declaration_group -> type_definition_group','declaration_group',1,'p_declaration_group','main.py',193),
  ('declaration_group -> variable_declaration_group','declaration_group',1,'p_declaration_group','main.py',194),
  ('constant_definition_group -> CONST constant_definition SEMICOLON','constant_definition_group',3,'p_constant_definition_group','main.py',199),
  ('constant_definition_group -> constant_definition_group constant_definition SEMICOLON','constant_definition_group',3,'p_constant_definition_group','main.py',200),
  ('constant_definition -> ID OPERATOR constant','constant_definition',3,'p_constant_definition','main.py',209),
  ('constant -> number','constant',1,'p_constant','main.py',214),
  ('constant -> sign number','constant',2,'p_constant','main.py',215),
  ('constant -> sign real_number','constant',2,'p_constant','main.py',216),
  ('sign -> ADD','sign',1,'p_sign','main.py',224),
  ('sign -> MUL','sign',1,'p_sign','main.py',225),
  ('number -> decimal_integer','number',1,'p_number','main.py',230),
  ('number -> sign decimal_integer','number',2,'p_number','main.py',231),
  ('decimal_integer -> digit_sequence','decimal_integer',1,'p_decimal_integer','main.py',239),
  ('digit_sequence -> NUMBER','digit_sequence',1,'p_digit_sequence','main.py',244),
  ('digit_sequence -> digit_sequence NUMBER','digit_sequence',2,'p_digit_sequence','main.py',245),
  ('real_number -> digit_sequence ADD fractional_part','real_number',3,'p_real_number','main.py',254),
  ('real_number -> digit_sequence exponent scale_factor','real_number',3,'p_real_number','main.py',255),
  ('real_number -> digit_sequence ADD fractional_part exponent scale_factor','real_number',5,'p_real_number','main.py',256),
  ('fractional_part -> digit_sequence','fractional_part',1,'p_fractional_part','main.py',266),
  ('scale_factor -> sign digit_sequence','scale_factor',2,'p_scale_factor','main.py',271),
  ('exponent -> EXPONENT','exponent',1,'p_exponent','main.py',279),
  ('variable_declaration_group -> VAR variable_declaration SEMICOLON','variable_declaration_group',3,'p_variable_declaration_group','main.py',284),
  ('variable_declaration_group -> variable_declaration_group variable_declaration SEMICOLON','variable_declaration_group',3,'p_variable_declaration_group','main.py',285),
  ('variable_declaration -> identifier_list COLON type_denoter','variable_declaration',3,'p_variable_declaration','main.py',294),
  ('type_denoter -> type_identifier','type_denoter',1,'p_type_denoter','main.py',299),
  ('type_identifier -> ID','type_identifier',1,'p_type_identifier','main.py',304),
  ('type_definition_group -> TYPE type_definition SEMICOLON','type_definition_group',3,'p_type_definition_group','main.py',309),
  ('type_definition_group -> type_definition_group type_definition SEMICOLON','type_definition_group',3,'p_type_definition_group','main.py',310),
  ('type_definition -> ID ASSIGN type_denoter','type_definition',3,'p_type_definition','main.py',319),
  ('statement_part -> compound_statement','statement_part',1,'p_statement_part','main.py',324),
  ('compound_statement -> BEGIN statement_sequence END_DOT','compound_statement',3,'p_compound_statement','main.py',333),
  ('compound_statement -> BEGIN statement_sequence END SEMICOLON','compound_statement',4,'p_compound_statement','main.py',334),
  ('statement_sequence -> statement','statement_sequence',1,'p_statement_sequence','main.py',339),
  ('statement_sequence -> statement_sequence SEMICOLON statement','statement_sequence',3,'p_statement_sequence','main.py',340),
  ('statement -> simple_statement','statement',1,'p_statement','main.py',349),
  ('statement -> structured_statement','statement',1,'p_statement','main.py',350),
  ('simple_statement -> empty_statement','simple_statement',1,'p_simple_statement','main.py',356),
  ('simple_statement -> assignment_statement','simple_statement',1,'p_simple_statement','main.py',357),
  ('simple_statement -> procedure_statement','simple_statement',1,'p_simple_statement','main.py',358),
  ('structured_statement -> compound_statement','structured_statement',1,'p_structured_statement','main.py',363),
  ('structured_statement -> conditional_statement','structured_statement',1,'p_structured_statement','main.py',364),
  ('structured_statement -> repetitive_statement','structured_statement',1,'p_structured_statement','main.py',365),
  ('empty_statement -> SEMICOLON','empty_statement',1,'p_empty_statement','main.py',370),
  ('assignment_statement -> assignment_statement_lhs ASSIGN expression','assignment_statement',3,'p_assignment_statement','main.py',375),
  ('assignment_statement_lhs -> variable_access','assignment_statement_lhs',1,'p_assignment_statement_lhs','main.py',380),
  ('file_variable -> variable_access','file_variable',1,'p_file_variable','main.py',385),
  ('variable_access -> entire_variable','variable_access',1,'p_variable_access','main.py',390),
  ('variable_access -> component_variable','variable_access',1,'p_variable_access','main.py',391),
  ('entire_variable -> variable_identifier','entire_variable',1,'p_entire_variable','main.py',396),
  ('variable_identifier -> ID','variable_identifier',1,'p_variable_identifier','main.py',401),
  ('component_variable -> field_designator','component_variable',1,'p_component_variable','main.py',406),
  ('field_designator -> field_designator_identifier','field_designator',1,'p_field_designator','main.py',411),
  ('field_designator_identifier -> ID','field_designator_identifier',1,'p_field_designator_identifier','main.py',416),
  ('expression -> shift_expression','expression',1,'p_expression','main.py',421),
  ('expression -> shift_expression relational_operator shift_expression','expression',3,'p_expression','main.py',422),
  ('relational_operator -> OPERATOR','relational_operator',1,'p_relational_operator','main.py',430),
  ('shift_expression -> simple_expression','shift_expression',1,'p_shift_expression','main.py',435),
  ('simple_expression -> term','simple_expression',1,'p_simple_expression','main.py',440),
  ('simple_expression -> term ADD term','simple_expression',3,'p_simple_expression','main.py',441),
  ('simple_expression -> term MUL term','simple_expression',3,'p_simple_expression','main.py',442),
  ('term -> factor','term',1,'p_term','main.py',450),
  ('term -> factor multiplying_operator factor','term',3,'p_term','main.py',451),
  ('factor -> sign unsigned_constant','factor',2,'p_factor','main.py',459),
  ('factor -> number','factor',1,'p_factor','main.py',460),
  ('factor -> variable_access','factor',1,'p_factor','main.py',461),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','main.py',462),
  ('factor -> NOT factor','factor',2,'p_factor','main.py',463),
  ('multiplying_operator -> MUL','multiplying_operator',1,'p_multiplying_operator','main.py',477),
  ('unsigned_constant -> number','unsigned_constant',1,'p_unsigned_constant','main.py',482),
  ('unsigned_constant -> real_number','unsigned_constant',1,'p_unsigned_constant','main.py',483),
  ('unsigned_constant -> constant_identifier','unsigned_constant',1,'p_unsigned_constant','main.py',484),
  ('constant_identifier -> ID','constant_identifier',1,'p_constant_identifier','main.py',489),
  ('conditional_statement -> if_statement','conditional_statement',1,'p_conditional_statement','main.py',494),
  ('if_statement -> IF boolean_expression THEN statement else_part','if_statement',5,'p_if_statement','main.py',499),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','main.py',504),
  ('else_part -> ELSE statement','else_part',2,'p_else_part','main.py',509),
  ('else_part -> empty_statement','else_part',1,'p_else_part','main.py',510),
  ('repetitive_statement -> while_statement','repetitive_statement',1,'p_repetitive_statement','main.py',515),
  ('while_statement -> WHILE boolean_expression DO statement','while_statement',4,'p_while_statement','main.py',520),
  ('write_parameter -> expression','write_parameter',1,'p_write_parameter','main.py',525),
  ('write_parameter -> expression COLON expression','write_parameter',3,'p_write_parameter','main.py',526),
  ('write_parameter -> expression COLON expression COLON expression','write_parameter',5,'p_write_parameter','main.py',527),
  ('write_parameter_list -> LPAREN write_parameter RPAREN','write_parameter_list',3,'p_write_parameter_list','main.py',537),
  ('write_parameter_list -> LPAREN STRING COMMA write_parameter RPAREN','write_parameter_list',5,'p_write_parameter_list','main.py',538),
  ('write_parameter_list -> LPAREN file_variable COMMA write_parameter RPAREN','write_parameter_list',5,'p_write_parameter_list','main.py',539),
  ('write_parameter_list -> LPAREN file_variable COMMA write_parameter COMMA write_parameter RPAREN','write_parameter_list',7,'p_write_parameter_list','main.py',540),
  ('read_parameter_list -> LPAREN variable_access RPAREN','read_parameter_list',3,'p_read_parameter_list','main.py',553),
  ('read_parameter_list -> LPAREN file_variable COMMA variable_access RPAREN','read_parameter_list',5,'p_read_parameter_list','main.py',554),
  ('read_parameter_list -> LPAREN file_variable COMMA variable_access COMMA variable_access RPAREN','read_parameter_list',7,'p_read_parameter_list','main.py',555),
  ('procedure_statement -> procedure_identifier read_parameter_list','procedure_statement',2,'p_procedure_statement','main.py',565),
  ('procedure_statement -> procedure_identifier write_parameter_list','procedure_statement',2,'p_procedure_statement','main.py',566),
  ('procedure_identifier -> ID','procedure_identifier',1,'p_procedure_identifier','main.py',571),
]
